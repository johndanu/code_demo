/**
 * Auth API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiAuthLoginPost200Response from '../model/ApiAuthLoginPost200Response';
import ApiAuthLoginPost401Response from '../model/ApiAuthLoginPost401Response';
import ApiAuthLoginPost404Response from '../model/ApiAuthLoginPost404Response';
import ApiAuthLoginPost500Response from '../model/ApiAuthLoginPost500Response';
import ApiAuthLoginPostRequest from '../model/ApiAuthLoginPostRequest';
import ApiAuthLogoutPost200Response from '../model/ApiAuthLogoutPost200Response';
import ApiAuthLogoutPost400Response from '../model/ApiAuthLogoutPost400Response';
import ApiAuthLogoutPost403Response from '../model/ApiAuthLogoutPost403Response';
import ApiAuthRegisterPost201Response from '../model/ApiAuthRegisterPost201Response';
import ApiAuthRegisterPost400Response from '../model/ApiAuthRegisterPost400Response';
import ApiAuthRegisterPostRequest from '../model/ApiAuthRegisterPostRequest';

/**
* Default service.
* @module api/DefaultApi
* @version 1.0.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiAuthLoginPost operation.
     * @callback module:api/DefaultApi~apiAuthLoginPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiAuthLoginPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * User login
     * @param {module:model/ApiAuthLoginPostRequest} apiAuthLoginPostRequest 
     * @param {module:api/DefaultApi~apiAuthLoginPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiAuthLoginPost200Response}
     */
    apiAuthLoginPost(apiAuthLoginPostRequest, callback) {
      let postBody = apiAuthLoginPostRequest;
      // verify the required parameter 'apiAuthLoginPostRequest' is set
      if (apiAuthLoginPostRequest === undefined || apiAuthLoginPostRequest === null) {
        throw new Error("Missing the required parameter 'apiAuthLoginPostRequest' when calling apiAuthLoginPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiAuthLoginPost200Response;
      return this.apiClient.callApi(
        '/api/auth/login', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiAuthLogoutPost operation.
     * @callback module:api/DefaultApi~apiAuthLogoutPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiAuthLogoutPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * User logout
     * Logs out the user by invalidating the refresh token.
     * @param {String} xRefreshToken Refresh token used for logout
     * @param {module:api/DefaultApi~apiAuthLogoutPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiAuthLogoutPost200Response}
     */
    apiAuthLogoutPost(xRefreshToken, callback) {
      let postBody = null;
      // verify the required parameter 'xRefreshToken' is set
      if (xRefreshToken === undefined || xRefreshToken === null) {
        throw new Error("Missing the required parameter 'xRefreshToken' when calling apiAuthLogoutPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'x-refresh-token': xRefreshToken
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiAuthLogoutPost200Response;
      return this.apiClient.callApi(
        '/api/auth/logout', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiAuthRegisterPost operation.
     * @callback module:api/DefaultApi~apiAuthRegisterPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiAuthRegisterPost201Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * User registration
     * @param {module:model/ApiAuthRegisterPostRequest} apiAuthRegisterPostRequest 
     * @param {module:api/DefaultApi~apiAuthRegisterPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiAuthRegisterPost201Response}
     */
    apiAuthRegisterPost(apiAuthRegisterPostRequest, callback) {
      let postBody = apiAuthRegisterPostRequest;
      // verify the required parameter 'apiAuthRegisterPostRequest' is set
      if (apiAuthRegisterPostRequest === undefined || apiAuthRegisterPostRequest === null) {
        throw new Error("Missing the required parameter 'apiAuthRegisterPostRequest' when calling apiAuthRegisterPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiAuthRegisterPost201Response;
      return this.apiClient.callApi(
        '/api/auth/register', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
